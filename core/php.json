{
  "Rota": {
    "prefix": "rotas",
    "body": [
      "$1router->get('/admin/exemplo/lista',       'ExemploController@index');",
      "$1router->get('/admin/exemplo/form',        'ExemploController@form');",
      "$1router->get('/admin/exemplo/form/{id}',   'ExemploController@form');",
      "$1router->post('/admin/exemplo/form',       'ExemploController@action');",
      "$1router->get('/admin/exemplo/delete/{id}', 'ExemploController@delete');"
    ],
    "description": "The Rotas"
  },
  "Controller": {
    "prefix": "controle",
    "body": [
      "namespace src\\controllers;\n",
      "use \\core\\Controller;",
      "use \\core\\Mensagem;",
      "use \\src\\models\\Exemplo;",
      "class ExemploController extends Controller {",
      "private \\$loggedUser;",
      "public function __construct() {",
      "\t\\$this->loggedUser = UserHandler::checkLogin();",
      "\tif($this->loggedUser === false) {",
      "\t\t$this->redirect('/admin/login');",
      "\t\t}",
      "\t}",
      "public function index() {",
      "\t$this->render('Exemplo/Lista', [",
      "\t\t'loggedUser' => $loggedUser",
      "\t]);",
      "}",
      "public function form(\\$atts = []){",
      "//Se tiver id vai mostrar form para editar",
      "if(!empty($atts['id'])) {",
      "\t\\$Exemplo = Exemplo::select()->where('id', \\$id)->one();",
      "\tif(!\\$Exemplo){",
      "\t\tMensagem::sucesso('Exemplo não encontrado!');",
      "\t\t\\$this->voltaPagina();",
      "\t}",
      "\t\\$titulo = \\$Exemplo['titulo'];",
      "\t\\$id = \\$atts['id'];",
      "\t\\$this->render('Exemplo/Form', [",
      "\t\t'loggedUser' => \\$loggedUser,",
      "\t\t'titulo' => \\$titulo,",
      "\t\t'Exemplo' => \\$Exemplo",
      "\t]);",
      "}else{",
      "//Se não vai abrir FORM de inserir",
      "\t\\$titulo = 'Novo';",
      "\t\\$this->render('Exemplo/Form', [",
      "\t\t'loggedUser' => \\$loggedUser,",
      "\t\t'titulo' => \\$titulo,",
      "\t\t'Exemplo' => \\$Exemplo",
      "\t]);",
      "\t}",
      "}",
      "public function action(\\$atts = []){",
      "//Se tem id vai editar",
      "if(!empty(\\$atts['id'])) {",
      "\t\\$id = \\$atts['id'];",
      "\t\\$Exemplo = Exemplo::select()->where('id', \\$id)->one();",
      "if(!\\$Exemplo){",
      "\tMensagem::erro('Exemplo não encontrado!');",
      "\t\\$this->voltaPagina();",
      "}",
      "\\$dados = [];",
      "foreach([] as \\$item){",
      "\t\\$dados[\\$item] = filter_input(INPUT_POST, \\$item);",
      "}",
      "if(!\\$dados){",
      "\tMensagem::erro('É necessário enviar todos os dados!');",
      "\t\\$this->voltaPagina();",
      "}",
      "\\$atualiza = User::update();",
      "foreach(\\$dados as \\$nome => \\$valor){",
      "\t\\$atualiza->set(\\$nome, \\$valor);",
      "\t}",
      "\tMensagem::sucesso('Exemplo atualizado com sucesso!');",
      "\t\\$this->voltaPagina();",
      "}else{",
      "//Se não vai inserir",
      "\t\\$dados = [];",
      "\tforeach([] as \\$item){",
      "\t\\$dados[\\$item] = filter_input(INPUT_POST, \\$item);",
      "}",
      "if(!\\$dados){",
      "\tMensagem::erro('É necessário enviar todos os dados!');",
      "\t\\$this->voltaPagina();",
      "}",
      "Exemplo::insert([\\$dados])->execute();",
      "Mensagem::sucesso('Exemplo adicionado com sucesso!');",
      "\\$this->voltaPagina();",
      "}",
      "}",
      "public function delete(\\$atts = []){",
      "if(!empty(\\$atts['id'])) {",
      "\t\\$id = \\$atts['id'];",
      "\tExemplo::delete()->where('id', \\$id)->execute();",
      "\tMensagem::sucesso('Deletado com sucesso!');",
      "\t\\$this->voltaPagina();",
      "}else{",
      "\tMensagem::sucesso('Erro ao excluir!');",
      "\t\\$this->voltaPagina();",
      "}",
      "}",
      "}"
    ],
    "description": "The Rotas"
  }
}