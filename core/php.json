{
	"Rota": {
		"prefix": "mrRotas",
		"body": [
			"//Rotas de $1",
			"\\$router->get('/admin/$1/lista',       '$1Controller@index');",
			"\\$router->get('/admin/$1/form',        '$1Controller@form');",
			"\\$router->get('/admin/$1/form/{id}',   '$1Controller@form');",
			"\\$router->post('/admin/$1/form',       '$1Controller@action');",
			"\\$router->get('/admin/$1/delete/{id}', '$1Controller@delete');"
		],
		"description": "The Rotas"
	},
	"controller": {
		"prefix": "mrController",
		"body": [
			"namespace src\\controllers;",
			"",
			"use \\core\\Controller;",
			"use \\core\\Mensagem;",
			"use \\src\\models\\\\$1;",
			"",
			"class ${TM_FILENAME} extends Controller {",
			"",
			"    private \\$loggedUser;",
			"",
			"    public function __construct() {",
			"        \\$this->loggedUser = UserHandler::checkLogin();",
			"        if(\\$this->loggedUser === false) {",
			"            \\$this->redirect('/admin/login');",
			"        }",
			"    }",
			"",
			"    public function index() {",
			"        \\$this->render('$1/Lista', [",
			"            'loggedUser' => \\$loggedUser",
			"        ]);",
			"    }",
			"    public function form(\\$atts = []){",
			"        //Se tiver id vai mostrar form para editar",
			"        if(!empty(\\$atts['id'])) {",
			"            \\$$1 = $1::select()->where('id', \\$id)->one();",
			"",
			"            if(!\\$$1){",
			"                Mensagem::sucesso('$1 não encontrado!');",
			"                \\$this->voltaPagina();",
			"            }",
			"",
			"            \\$titulo = \\$$1['titulo'];",
			"            \\$id = \\$atts['id'];",
			"",
			"            \\$this->render('$1/Form', [",
			"                'loggedUser' => \\$loggedUser,",
			"                'titulo' => \\$titulo,",
			"                '$1' => \\$$1",
			"            ]);",
			"",
			"        }else{",
			"            //Se não vai abrir FORM de inserir",
			"            \\$titulo = 'Novo';",
			"",
			"            \\$this->render('$1/Form', [",
			"                'loggedUser' => \\$loggedUser,",
			"                'titulo' => \\$titulo,",
			"                '$1' => \\$$1",
			"            ]);",
			"        }",
			"    }",
			"",
			"    public function action(\\$atts = []){",
			"        //Se tem id vai editar",
			"        if(!empty(\\$atts['id'])) {",
			"",
			"            \\$id = \\$atts['id'];",
			"            \\$$1 = $1::select()->where('id', \\$id)->one();",
			"",
			"            if(!\\$$1){",
			"                Mensagem::erro('$1 não encontrado!');",
			"                \\$this->voltaPagina();",
			"            }",
			"",
			"            \\$dados = [];",
			"",
			"            foreach([] as \\$item){",
			"",
			"                \\$dados[\\$item] = filter_input(INPUT_POST, \\$item);",
			"",
			"            }",
			"",
			"            if(!\\$dados){",
			"                Mensagem::erro('É necessário enviar todos os dados!');",
			"                \\$this->voltaPagina();",
			"            }",
			"",
			"            \\$atualiza = User::update();",
			"",
			"            foreach(\\$dados as \\$nome => \\$valor){",
			"",
			"                \\$atualiza->set(\\$nome, \\$valor);",
			"",
			"            }",
			"            ",
			"            \\$atualiza->where('id', \\$id)->execute();",
			"",
			"            Mensagem::sucesso('$1 atualizado com sucesso!');",
			"            \\$this->voltaPagina();",
			"",
			"        }else{",
			"            //Se não vai inserir",
			"",
			"            \\$dados = [];",
			"",
			"            foreach([] as \\$item){",
			"",
			"                \\$dados[\\$item] = filter_input(INPUT_POST, \\$item);",
			"",
			"            }",
			"",
			"            if(!\\$dados){",
			"                Mensagem::erro('É necessário enviar todos os dados!');",
			"                \\$this->voltaPagina();",
			"            }",
			"",
			"            $1::insert([\\$dados])->execute();",
			"",
			"            Mensagem::sucesso('$1 adicionado com sucesso!');",
			"            \\$this->voltaPagina();",
			"        }",
			"    }",
			"",
			"    public function delete(\\$atts = []){",
			"",
			"        if(!empty(\\$atts['id'])) {",
			"",
			"            \\$id = \\$atts['id'];",
			"            $1::delete()->where('id', \\$id)->execute();",
			"            Mensagem::sucesso('Deletado com sucesso!');",
			"            \\$this->voltaPagina();",
			"",
			"        }else{",
			"",
			"            Mensagem::sucesso('Erro ao excluir!');",
			"            \\$this->voltaPagina();",
			"            ",
			"        }",
			"",
			"    }",
			"",
			"}"
		],
		"description": "controller"
	}
}